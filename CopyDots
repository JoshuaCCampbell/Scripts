#!/bin/bash

# CopyDots
# Joshua C. Campbell
# Copy dot files to git dir with optional push


# Get enviroment from the user
if [ "$1" != "" ]; then
    branch="$1"
fi

# Ask for input until not blank
# TODO: Implement branch checking
while [ "$branch" == "" ]
do
    echo "Choose an enviroment"
    read branch
done

# Directories to copy
if [ "$branch" = "bspwm" ]; then
    declare -a dirs=(".config/bspwm" ".config/sxhkd" ".config/neofetch" ".config/polybar" ".vimrc" ".xinitrc" ".Xresources" ".zprofile" ".zshrc")
elif [ "$branch" = "i3" ]; then
    declare -a dirs=(".config/i3" ".config/polybar" ".vimrc" ".xinitrc" ".Xresources" ".zprofile" ".zshrc")
else
    (echo "Invalid branch." >&2)
    exit 1
fi


# Start main script
####################################################################################

copy_directory()
{
    echo "Copying $1"
    cp -r "$HOME/$1" "$HOME/Scripts/Dot-Files"
}

# Copy each directory listed in dirs array
for dir in "${dirs[@]}"
do
    copy_directory $dir
done

echo "Copying Complete"

# Push to git
echo "Would you like to push the changes to Github? (y/N)"
read push

if [ "$push" == "y" ] || [ "$push" == "Y" ]; then
    cd $HOME/Scripts/Dot-Files
    git add --all
    git commit -m "$(date)"
    git push origin $branch

    echo "$(date) [Info] Pushing to git" >> $HOME/Scripts/Logs/CopyDots.log
    echo "Exiting script"
    exit 1
elif [ "$push" == "" ] || [ "$push" == "n" ] || [ "$push" == "N" ]; then
    echo "Exiting script"
    echo "$(date) [Info] Skipped git push" >> $HOME/Scripts/Logs/CopyDots.log
    exit 1
else
    echo "$(date) [Error] Invalid choice: '$push' for git push" >> $HOME/Scripts/Logs/CopyDots.log

    echo "Invalid input. Saving to log for future analysis"
    echo "Exiting script"
    exit 0
fi
